#!/bin/env sh
# lmc common handler script

col_blue="\e[0;34m"
col_yellow="\e[0;33m"
col_red="\e[0;31m"
col_green="\e[0;32m"
col_reset="\e[0;39m"
col_cyan="\e[0;36m"
col_white="\e[0;37;1m"

if [ -n "$LMC_NO_COLORS" ]; then
    col_blue=
    col_yellow=
    col_red=
    col_green=
    col_reset=
    col_cyan=
    col_white=
fi

res="$(lmc search "$1")"
lines=$(echo "$res" | wc -l)
if [ -n "$res" ]; then
    if [ $lines -eq 1 ]; then
        mod=$(echo "$res" | cut -d'"' -f4)
        printf "[lmc] ${col_green}autoloading $mod..${col_reset}" >&2
        module load "$mod" && $@
    else
        printf "[lmc] ${col_cyan}select a module to load:${col_reset}\n" >&2
        num=0
        while read -r line; do
            mod_code=$(echo $line | cut -d'"' -f4)

            num=$((num + 1))
            printf "\t${col_reset}%d) ${col_white}%s${col_reset}\n" $num "$mod_code" >&2
        done <<< "$res"
        printf "[lmc] ${col_cyan}enter a selection${col_reset} (1-%d, q to abort) [1]: " $num >&2
        read -r inp
        [ -z "$inp" ] && inp=1
        if [ $inp -ge 1 ]; then
            if [ $inp -le $num ]; then
                mod=$(echo "$res" | head -n $inp | tail -n1 | cut -d'"' -f4)
                echo "[lmc] loading $mod.." >&2
                module load "$mod" && $@
                exit $?
            fi
        fi

        echo "[lmc] cancelling.." >&2
    fi
    else
    printf "%s: ${col_red}command not found${col_reset}\n" "$1" >&2

    # try and find similar commands
    res="$(lmc like "$1" | cut -d'"' -f6 | uniq | head -n3 | paste -sd' ' -)"

    if [ -n "$res" ]; then
        printf "[lmc] ${col_cyan}hint: try a similar command${col_reset}" >&2
        for i in $res; do
            printf " ${col_yellow}\"%s\"${col_reset}" "$i" >&2
        done
        echo >&2
    else
        printf "[lmc] ${col_red}no similar commands found${col_reset}\n" >&2
    fi
fi
